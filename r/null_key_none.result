drop table if exists t1,t2;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
Warnings:
Warning	3090	Changing sql mode 'NO_AUTO_CREATE_USER' is deprecated. It will be removed in a future release.
CREATE TABLE t1 (
id int(10) unsigned NOT NULL, #auto_increment,
uniq_id int(10) unsigned default NULL,
PRIMARY KEY  (id),
UNIQUE KEY idx1 (uniq_id)
) ENGINE=Sequoiadb;
CREATE TABLE t2 (
id int(10) unsigned NOT NULL, #auto_increment,
uniq_id int(10) unsigned default NULL,
PRIMARY KEY  (id)
) ENGINE=Sequoiadb;
INSERT INTO t1 VALUES (1,NULL),(2,NULL),(3,1),(4,2),(5,NULL),(6,NULL),(7,3),(8,4),(9,NULL),(10,NULL);
INSERT INTO t2 VALUES (1,NULL),(2,NULL),(3,1),(4,2),(5,NULL),(6,NULL),(7,3),(8,4),(9,NULL),(10,NULL);
UPDATE t1 SET id=id+100 where uniq_id is null;
UPDATE t2 SET id=id+100 where uniq_id is null;
select id from t1 where uniq_id is null;
id
101
102
105
106
109
110
select id from t2 where uniq_id is null;
id
101
102
105
106
109
110
DELETE FROM t1 WHERE uniq_id IS NULL;
DELETE FROM t2 WHERE uniq_id IS NULL;
SELECT * FROM t1 ORDER BY uniq_id, id;
id	uniq_id
3	1
4	2
7	3
8	4
SELECT * FROM t2 ORDER BY uniq_id, id;
id	uniq_id
3	1
4	2
7	3
8	4
DROP table t1,t2;
CREATE TABLE `t1` (
`order_id` char(32) NOT NULL default '',
`product_id` char(32) NOT NULL default '',
`product_type` int(11) NOT NULL default '0',
PRIMARY KEY  (`order_id`,`product_id`,`product_type`)
) ENGINE=Sequoiadb;
CREATE TABLE `t2` (
`order_id` char(32) NOT NULL default '',
`product_id` char(32) NOT NULL default '',
`product_type` int(11) NOT NULL default '0',
PRIMARY KEY  (`order_id`,`product_id`,`product_type`)
) ENGINE=Sequoiadb;
INSERT INTO t1 (order_id, product_id, product_type) VALUES
('3d7ce39b5d4b3e3d22aaafe9b633de51',1206029, 3),
('3d7ce39b5d4b3e3d22aaafe9b633de51',5880836, 3),
('9d9aad7764b5b2c53004348ef8d34500',2315652, 3);
INSERT INTO t2 (order_id, product_id, product_type) VALUES
('9d9aad7764b5b2c53004348ef8d34500',2315652, 3);
select t1.* from t1
left join t2 using(order_id, product_id, product_type)
where t2.order_id=NULL;
order_id	product_id	product_type
drop table t1,t2;
create table t1 (id int);
insert into t1 values (null), (0);
create table t2 (id int);
insert into t2 values (null);
select * from t1, t2 where t1.id = t2.id;
id	id
alter table t1 add key id (id);
select * from t1, t2 where t1.id = t2.id;
id	id
drop table t1,t2;
create table t1 (
id  integer,
id2 integer not null,
index (id),
index (id2)
);
insert into t1 values(null,null),(1,1);
Warnings:
Warning	1048	Column 'id2' cannot be null
select * from t1;
id	id2
NULL	0
1	1
select * from t1 where id <=> null;
id	id2
NULL	0
select * from t1 where id <=> null or id > 0;
id	id2
NULL	0
1	1
select * from t1 where id is null or id > 0;
id	id2
NULL	0
1	1
select * from t1 where id2 <=> null or id2 > 0;
id	id2
1	1
select * from t1 where id2 is null or id2 > 0;
id	id2
1	1
delete from t1 where id <=> NULL;
select * from t1;
id	id2
1	1
drop table t1;
CREATE TABLE t1 (a int);
CREATE TABLE t2 (a int, b int, INDEX idx(a));
CREATE TABLE t3 (b int, INDEX idx(b));
CREATE TABLE t4 (b int, INDEX idx(b));
INSERT INTO t1 VALUES (1), (2), (3), (4);
INSERT INTO t2 VALUES (1, 1), (3, 1);
INSERT INTO t3 VALUES 
(NULL), (NULL), (NULL), (NULL), (NULL),
(NULL), (NULL), (NULL), (NULL), (NULL);
INSERT INTO t4 SELECT * FROM t3;
INSERT INTO t3 SELECT * FROM t4;
INSERT INTO t4 SELECT * FROM t3;
INSERT INTO t3 SELECT * FROM t4;
INSERT INTO t4 SELECT * FROM t3;
INSERT INTO t3 SELECT * FROM t4;
INSERT INTO t4 SELECT * FROM t3;
INSERT INTO t3 SELECT * FROM t4;
INSERT INTO t4 SELECT * FROM t3;
INSERT INTO t3 SELECT * FROM t4;
INSERT INTO t4 SELECT * FROM t3;
INSERT INTO t3 SELECT * FROM t4;
INSERT INTO t4 SELECT * FROM t3;
INSERT INTO t3 SELECT * FROM t4;
INSERT INTO t4 SELECT * FROM t3;
INSERT INTO t3 SELECT * FROM t4;
INSERT INTO t3 VALUES (2), (3);
SELECT COUNT(*) FROM t3;
COUNT(*)
15972
SELECT SQL_CALC_FOUND_ROWS * FROM t1 LEFT JOIN t2 ON t1.a=t2.a
LEFT JOIN t3 ON t2.b=t3.b;
a	a	b	b
1	1	1	NULL
2	NULL	NULL	NULL
3	3	1	NULL
4	NULL	NULL	NULL
SELECT FOUND_ROWS();
FOUND_ROWS()
4
DROP TABLE t1,t2,t3,t4;
End of 5.0 tests
#
# Bug#54608 Query using IN + OR + IS TRUE and IS NULL returns
# NULL when should be empty
#
CREATE TABLE t1 (a INT, KEY (a));
INSERT INTO t1 VALUES (1), (2), (NULL);
SELECT a FROM t1 WHERE a IN (42) OR (a IS TRUE AND a IS NULL);
a
SELECT a FROM t1 WHERE a IN (42) OR (a=NULL);
a
drop table t1;
SET sql_mode = default;
set optimizer_switch=default;
